% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ast_header.R
\name{format_ast_header}
\alias{format_ast_header}
\title{Format header data from an Access Sensor Technologies air sampler log file to
to make sure each column in the header data frame is the correct data type.}
\usage{
format_ast_header(data, update_names = FALSE, shiny = FALSE)
}
\arguments{
\item{data}{A header data frame returned by the \link{transpose_ast_header} function.}

\item{update_names}{Option to update any deprecated variable names from log files recorded using older firmware versions to the variable names used in the current firmware version.

For samples collected using UPAS v2 firmware versions beyond rev100, the old
names shown on the left will be updated to the names shown on the right:
\itemize{
\item VolumetricFlowRate        -> FlowRateSetpoint
\item DutyCycle                 -> FlowDutyCycle
\item LoggedRuntime             -> OverallDuration
\item SampledRuntime            -> PumpingDuration
\item AverageVolumetricFlowRate -> PumpingFlowRateAverage
}

For samples collected using UPAS v2 firmware rev100, the old names shown on
the left will be updated to the names shown on the right:
\itemize{
\item CumulativeSamplingTime -> LifetimeSampleRuntime
\item StartDateTime          -> StartDateTimeUTC
\item AverageVolumetricFlow  -> PumpingFlowRateAverage
}

Variable names cannot be updated for log files written using UPAS v2 firmware
versions preceding rev100.}

\item{shiny}{Option to make TRUE if using function with AST shiny app.}
}
\value{
A data frame with a single row of header data that are formatted and ready for analysis.
}
\description{
\code{format_ast_header} applies deviced-specific formatting to the columns in a
data frame of header data from an Access Sensor Technologies air sampler
log file. This function sets the proper data type for each variable, adds a
column to specify the AST sampler type, adds columns to describe the codes
wassociated ith the ShutdownMode and PMSensorInterval, and can also be
directed to update old variable names to current variable names.
}
\examples{
# UPASv2 EXAMPLES
upasv2_filename <- 'PS1771_LOG_2024-06-13T21_20_17UTC_GPSoutside_________Eng.txt'
upasv2_file <- system.file("extdata", upasv2_filename, package = "astr", mustWork = TRUE)
upasv2_header_list <- fread_ast_header(upasv2_file)
upasv2_header_wide <- transpose_ast_header(upasv2_header_list$header)
upasv2_header <- format_ast_header(upasv2_header_wide, update_names=TRUE)

# UPASv2x EXAMPLES
upasv2x_filename <- 'PSP00270_LOG_2024-06-25T21_37_48UTC_GPS-in-out______----------.txt'
upasv2x_file <- system.file("extdata", upasv2x_filename, package = "astr", mustWork = TRUE)
upasv2x_header_list <- fread_ast_header(upasv2x_file)
upasv2x_header_wide <- transpose_ast_header(upasv2x_header_list$header)
upasv2x_header <- format_ast_header(upasv2x_header_wide, update_names=FALSE)

# Diagnostic file
upasv2x_diag_filename <- 'PSP00270_LOG_2024-06-13T16_24_47UTC_DIAGNOSTIC________________.txt'
upasv2x_diag_file <- system.file("extdata", upasv2x_diag_filename, package = "astr", mustWork = TRUE)
upasv2x_diag_header_list <- fread_ast_header(upasv2x_diag_file)
upasv2x_diag_header_wide <- transpose_ast_header(upasv2x_diag_header_list$header, upasv2x_diag_header_list$diag)
upasv2x_diag_header <- format_ast_header(upasv2x_diag_header_wide, update_names=FALSE)

# HHB EXAMPLES
hhb_filename <- 'HHB00032_LOG_2024-07-01T18_20UTC.csv'
hhb_file <- system.file("extdata", hhb_filename, package = "astr", mustWork = TRUE)
hhb_header_raw <- fread_ast_header(hhb_file)$header
hhb_header_wide <- transpose_ast_header(hhb_header_raw)
hhb_header <- format_ast_header(hhb_header_wide)
}
